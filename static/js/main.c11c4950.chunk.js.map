{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["credit","n","sem","m","App","useState","currentSum","setSGPA","finalCGPA","clear","setClear","useEffect","document","querySelector","value","Clear","e","preventDefault","console","log","reset","className","type","id","placeholder","onClick","iot","bda","uid","pro","intern","sgpa","parseFloat","innerHTML","readOnly","first","second","third","fourth","fifth","sixth","seventh","eigth","final","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c11c4950.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport './App.css';\n\nfunction credit(n)\n{\n  if(n >= 90)\n    return 10\n  if(n <90 && n >=80)\n    return 9\n  if(n <80 && n >=70)\n    return 8\n  if(n <70 && n >=60)\n    return 7\n  if(n <60 && n >=50)\n    return 6\n  if(n <50 && n >=45)\n    return 5\n  if(n <45 && n >=40)\n    return 4\n  if(n <40 )\n    return 0\n}\n\nfunction sem(n, m)\n{\n    if(n === 1)\n    return 24*m\n    if(n === 2)\n    return 24*m\n    if(n === 3)\n    return 28*m\n    if(n === 4)\n    return 28*m\n    if(n === 5)\n    return 26*m\n    if(n === 6)\n    return 26*m\n    if(n === 7)\n    return 24*m\n    if(n === 8)\n    return 20*m\n}\n\nfunction App() {\n  const [currentSum,setSGPA,setCGPA,finalCGPA]=useState(0);\n  const [clear,setClear]=useState(false);\n\n  useEffect(()=>{\n    if(clear)\n    document.querySelector('#res').value=\"\";\n  })\n\n\n  const Add=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let iot=document.querySelector('#iot').value\n    let bda=document.querySelector('#bda').value\n    let uid=document.querySelector('#uid').value\n    let pro=document.querySelector('#pro').value\n    let sem=document.querySelector('#sem').value\n    let intern=document.querySelector('#intern').value\n    iot = credit(iot)\n    bda = credit(bda)\n    uid = credit(uid)\n    pro = credit(pro/2)\n    sem = credit(sem)\n    intern = credit(intern)\n    let sgpa= (parseFloat(iot*4)+parseFloat(bda*4)+parseFloat(uid*3)+parseFloat(pro*5)+parseFloat(sem*2)+parseFloat(intern*2))/20; \n    setSGPA(sgpa);\n    document.querySelector('#declare').innerHTML = \"Proud of you!\";\n    document.querySelector('#iot').value=\"\";\n    document.querySelector('#bda').value=\"\";\n    document.querySelector('#uid').value=\"\";\n    document.querySelector('#pro').value=\"\";\n    document.querySelector('#sem').value=\"\";  \n    document.querySelector('#intern').value=\"\";\n  }\n\n  const Clear=(e)=>{\n    e.preventDefault();\n    console.log('sum:', currentSum);\n    document.querySelector('form').reset();\n    setClear(true);\n    setSGPA(0);\n  }\n\n  const Find=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let first=document.querySelector('#first').value;\n    let second=document.querySelector('#second').value;\n    let third=document.querySelector('#third').value;\n    let fourth=document.querySelector('#fourth').value;\n    let fifth =document.querySelector('#fifth').value;\n    let sixth=document.querySelector('#sixth').value;\n    let seventh=document.querySelector('#seventh').value;\n    let eigth=document.querySelector('#eigth').value;\n\n    first=sem(1, first);\n    second=sem(2, second);\n    third=sem(3, third);\n    fourth=sem(4,fourth);\n    fifth=sem(5, fifth);\n    sixth=sem(6,sixth);\n    seventh=sem(7,seventh);\n    eigth=sem(8,eigth);\n\n    let final = (first+second+third+fourth+fifth+sixth+seventh+eigth)/200;\n    document.querySelector('#res1').value = final ;\n    document.querySelector('#declare').innerHTML = \"Proud of you!\";\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-title\">\n        <h1>VTU 8th Sem SGPA Calculator</h1><h6>because why not</h6>\n      </div>\n      <form>\n        <label>Enter yo marks fool!</label>\n        <br /> \n            <br />\n            <input type=\"text\" id=\"iot\" placeholder=\"IOT (out of 100)\" />\n            <br />\n            <input type=\"text\" id=\"bda\" placeholder=\"Big Data (out of 100)\" />\n            <br />\n            <input type=\"text\" id=\"uid\" placeholder=\"UID/MID (out of 100)\" />\n            <br />\n            <input type=\"text\" id=\"pro\" placeholder=\"Project (out of 200)\" />\n            <br />\n            <input type=\"text\" id=\"sem\" placeholder=\"Seminar (out of 100)\" />\n            <br />\n            <input type=\"text\" id=\"intern\" placeholder=\"Internship (out of 100)\" />\n            <br />            \n            <button onClick={Add}>Calculate</button>\n            <button onClick={Clear}>Clear</button>\n            <br />\n            <br />\n            <input type=\"text\" id=\"res\" value={currentSum} placeholder=\"Calculated SGPA\" readOnly />\n            <br />\n            <br />\n            <br />\n            <h3>Final CGPA </h3>\n            <input type=\"text\" id=\"first\" placeholder=\"First Sem\" />\n            <br />\n            <input type=\"text\" id=\"second\" placeholder=\"Second sem\" />\n            <br />\n            <input type=\"text\" id=\"third\" placeholder=\"Third Sem\" />\n            <br />\n            <input type=\"text\" id=\"fourth\" placeholder=\"Fourth Sem\" />\n            <br />\n            <input type=\"text\" id=\"fifth\" placeholder=\"Fifth Sem\" />\n            <br />\n            <input type=\"text\" id=\"sixth\" placeholder=\"Sixth Sem\" />\n            <br />\n            <input type=\"text\" id=\"seventh\" placeholder=\"Seventh Sem\" />\n            <br />\n            <input type=\"text\" id=\"eigth\" placeholder=\"Final Sem\" />\n            <br />\n           <button onClick={Find}>Get CGPA</button>\n           <button onClick={Clear}>Clear</button>\n           <br />\n           <br />\n           <input type=\"text\" id=\"res1\" value={finalCGPA} placeholder=\"Calculated CGPA\" readOnly />\n      </form>\n      <p id=\"declare\"> </p>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}